From f919264f774710847ba745023836b6bcd14d03d2 Mon Sep 17 00:00:00 2001
From: Lianwei Wang <lianwei.wang@gmail.com>
Date: Thu, 3 Apr 2014 14:03:04 -0700
Subject: [PATCH] cpufreq: activeffect: enable activeffect governor to build

Change-Id: Icaa23081e65fb90c75dc7ef8cd3205589d6cf0c6
Signed-off-by: Lianwei Wang <lianwei.wang@gmail.com>
---
 drivers/cpufreq/Kconfig  | 26 ++++++++++++++++++++++++++
 drivers/cpufreq/Makefile |  1 +
 include/linux/cpufreq.h  |  3 +++
 3 files changed, 30 insertions(+)

diff --git a/drivers/cpufreq/Kconfig b/drivers/cpufreq/Kconfig
index 57f96eb..ec608a4 100644
--- a/drivers/cpufreq/Kconfig
+++ b/drivers/cpufreq/Kconfig
@@ -109,6 +109,15 @@ config CPU_FREQ_DEFAULT_GOV_INTERACTIVE
 	  loading your cpufreq low-level hardware driver, using the
 	  'interactive' governor for latency-sensitive workloads.
 
+config CPU_FREQ_DEFAULT_GOV_ACTIVEFFECT
+	bool "activeffect"
+	select CPU_FREQ_GOV_ACTIVEFFECT
+	help
+	  Use the CPUFreq governor 'activeffect' as default. This allows
+	  you to get a full dynamic cpu frequency capable system by simply
+	  loading your cpufreq low-level hardware driver, using the
+	  'activeffect' governor for latency-sensitive worklaods.
+
 endchoice
 
 config CPU_FREQ_GOV_PERFORMANCE
@@ -206,6 +215,23 @@ config CPU_FREQ_GOV_CONSERVATIVE
 
 	  If in doubt, say N.
 
+config CPU_FREQ_GOV_ACTIVEFFECT
+	tristate "'activeffect' cpufreq policy governor"
+	help
+	  'activeffect' - this driver is rather similar to the 'interactive'
+	  governor both in its source code and its purpose. The difference is
+	  its cpufreq up/down algorithm. The freq update is not always in the
+	  timer callback as do in the interactive governor, but consider the
+	  idle history data to adjuct the cpu frequency. It will not always so
+	  easy to jump to the max cpu frequency but no responsive lost.
+
+	  To compile this driver as a module, choose M here: the
+	  module will be called cpufreq_activeffect.
+
+	  For details, take a look at linux/Documentation/cpu-freq.
+
+	  If in doubt, say N.
+
 menu "x86 CPU frequency scaling drivers"
 depends on X86
 source "drivers/cpufreq/Kconfig.x86"
diff --git a/drivers/cpufreq/Makefile b/drivers/cpufreq/Makefile
index 83ab92b..0af34e9 100644
--- a/drivers/cpufreq/Makefile
+++ b/drivers/cpufreq/Makefile
@@ -10,6 +10,7 @@ obj-$(CONFIG_CPU_FREQ_GOV_USERSPACE)	+= cpufreq_userspace.o
 obj-$(CONFIG_CPU_FREQ_GOV_ONDEMAND)	+= cpufreq_ondemand.o
 obj-$(CONFIG_CPU_FREQ_GOV_CONSERVATIVE)	+= cpufreq_conservative.o
 obj-$(CONFIG_CPU_FREQ_GOV_INTERACTIVE)	+= cpufreq_interactive.o
+obj-$(CONFIG_CPU_FREQ_GOV_ACTIVEFFECT)    += cpufreq_activeffect.o
 
 # CPUfreq cross-arch helpers
 obj-$(CONFIG_CPU_FREQ_TABLE)		+= freq_table.o
diff --git a/include/linux/cpufreq.h b/include/linux/cpufreq.h
index 6723f48..8bc85ea 100644
--- a/include/linux/cpufreq.h
+++ b/include/linux/cpufreq.h
@@ -375,6 +375,9 @@ extern struct cpufreq_governor cpufreq_gov_conservative;
 #elif defined(CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE)
 extern struct cpufreq_governor cpufreq_gov_interactive;
 #define CPUFREQ_DEFAULT_GOVERNOR	(&cpufreq_gov_interactive)
+#elif defined(CONFIG_CPU_FREQ_DEFAULT_GOV_ACTIVEFFECT)
+extern struct cpufreq_governor cpufreq_gov_activeffect;
+#define CPUFREQ_DEFAULT_GOVERNOR        (&cpufreq_gov_activeffect)
 #endif
 
 
-- 
1.8.0

